-- Updating job config should update config for all running jobs too (aka 'command' etc.)

-- Throw giant red flags if a process reboots too frequently
-- New cerebro CLI options:
 -- Redeploy/Update cerebro itself to a machine
 -- Print logs from a task (chose which machine in CLI or dump all if
   just one machine)
 -- Reboot a task or all tasks on a machine
 -- Check status of a jobfiller.

Give each jobfiller an ID so we can look them up via CLI etc.

--Documentation TODO:
-- More examples of tasks.
-- Talk about deploying custom recipes
-- Comparison to Supervisord

-- Clustersitter replication and sharding?
-- If a machine is decomissioned, remove it from all pending jobfillers.
  - If a jobfiller has no more machines, just stop.

-- Move jobfiller timeout to be state level
-- Move decomissioning into its own thread
-- Consider having one long lived thread that does DNS enforcement

-- Job filler should advance the state of each machine independently
-- Consider if we need the jobs persistence code.
-- Abstract out monitoredmachine so we can do something like monitoredmongo ?
-- Error reporting to UI -- what if we can't SSH into a machine, how
   is that reported?

--What happens to tasks and job fill if a machine is in POLL_FAILURES?
 - Right now nothing, the job thinks things are OK
 - First thing MachineDoctor does should be to clear the machine's
   tasks so the job will refill it elsewhere

-- machine sitter / console
 - Setup ENV with defaults for all child tasks
 - Configure actions in console / http
 - Configure settings in console / http
 - prettier web UI for starting/stopping tasks

-- For all stats sitters, look for a VERSION file and show that if available

Flesh out the stats collector, show CPU usage and history etc.
Have constraints output a % instead of a bool so we can do warnings at
thresholds
Implement Alerting in HTTP Interface
Implement 'flexible' limits, aka how long a process can be in
   violation before its killed
Add Logging instead of printing inside task sitter
  Expose task-sitter logs, too!
